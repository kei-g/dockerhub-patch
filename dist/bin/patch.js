var m=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports);var d=(e,t,o)=>new Promise((c,i)=>{var u=s=>{try{r(o.next(s))}catch(a){i(a)}},p=s=>{try{r(o.throw(s))}catch(a){i(a)}},r=s=>s.done?c(s.value):Promise.resolve(s.value).then(u,p);r((o=o.apply(e,t)).next())});import*as n from"@actions/core";import*as k from"http";import{CookieBaker as w,loginAsync as f,setDescriptionAsync as q}from"..";var I=m(g=>{const y=()=>d(g,null,function*(){const e=n.getInput("description",{required:!0}),t=n.getInput("overview",{required:!0}),o=n.getInput("password",{required:!0});n.setSecret(o);const c=n.getInput("repo",{required:!0}),i=n.getInput("username",{required:!0}),u=new k.Agent({keepAlive:!0}),p=w.default,r=yield f({agent:u,baker:p,password:o,username:i});return"token"in r&&typeof r.token=="string"?yield q({agent:u,baker:p,description:e,overview:t,repo:`${i}/${c}`,token:r.token}):Promise.reject(r)});y().catch(e=>n.setFailed(e)).then(e=>typeof e=="undefined"||n.setOutput("response",e))});export default I();
